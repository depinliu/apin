if(!self.define){let e,s={};const n=(n,i)=>(n=new URL(n+".js",i).href,s[n]||new Promise((s=>{if("document"in self){const e=document.createElement("script");e.src=n,e.onload=s,document.head.appendChild(e)}else e=n,importScripts(n),s()})).then((()=>{let e=s[n];if(!e)throw new Error(`Module ${n} didnâ€™t register its module`);return e})));self.define=(i,r)=>{const l=e||("document"in self?document.currentScript.src:"")||location.href;if(s[l])return;let t={};const o=e=>n(e,l),u={module:{uri:l},exports:t,require:o};s[l]=Promise.all(i.map((e=>u[e]||o(e)))).then((e=>(r(...e),t)))}}define(["./workbox-3577b011"],(function(e){"use strict";self.skipWaiting(),e.clientsClaim(),e.precacheAndRoute([{url:"assets/_401-WRQDDb6u.js",revision:null},{url:"assets/_404-DTr4HhXt.js",revision:null},{url:"assets/_error-VkkGyJwl.js",revision:null},{url:"assets/AuthContentComponent-DK1Bn7op.js",revision:null},{url:"assets/BottomNavbarComponent-DNTWwetA.css",revision:null},{url:"assets/BottomNavbarComponent-XzWrOPjN.js",revision:null},{url:"assets/BudgetView-C9D-7Spf.js",revision:null},{url:"assets/HomeView-BAFE2aDW.js",revision:null},{url:"assets/index-BQVrmuAG.css",revision:null},{url:"assets/index-BREC9Syt.css",revision:null},{url:"assets/index-CvKDj53G.js",revision:null},{url:"assets/LoginView-JtYmw9np.js",revision:null},{url:"assets/ProfileView-ChzEC_qc.js",revision:null},{url:"assets/RegisterView-DPmv7qHb.js",revision:null},{url:"assets/ReportView-CuB5uG0i.js",revision:null},{url:"index.html",revision:"1a6e35066ec48a968255c51cd4118b7c"},{url:"registerSW.js",revision:"1872c500de691dce40960bb85481de07"},{url:"favicon/icon-192x192.png",revision:"b85525decc337d7789c5b67943866fa2"},{url:"favicon/icon-512x512.png",revision:"d27e4ffd05dc34d30095836c88ae2f9d"},{url:"manifest.webmanifest",revision:"8fd0549a0b513770dce4e86710621f0c"}],{}),e.cleanupOutdatedCaches(),e.registerRoute(new e.NavigationRoute(e.createHandlerBoundToURL("index.html"))),e.registerRoute((({request:e})=>"document"===e.destination),new e.NetworkFirst({cacheName:"html-cache",plugins:[]}),"GET"),e.registerRoute((({request:e})=>"image"===e.destination),new e.CacheFirst({cacheName:"image-cache",plugins:[new e.ExpirationPlugin({maxEntries:10,maxAgeSeconds:604800})]}),"GET")}));
